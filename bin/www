#!usr/bin/env node

const app = require('../app');
const debug = require('debug')('dummy-express:server');
const http = require('http');

const port = process.env.PORT || '3030';
app.set('port', port);

const server = http.createServer(app);
const subscription = require('../lib/jetstream');


server.listen(port);
server.on('error', onError);
server.on('listening', onListening);


function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  let bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  subscription.initSubscribe();
  debug('Listening on ' + bind);
}
